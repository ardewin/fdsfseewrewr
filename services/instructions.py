from aiogram.exceptions import TelegramBadRequest
from services import reminders
from keyboards import user_keyboard
from services.telegram_utils import safe_send

def build_instruction(enabled: bool) -> str:
    INSTR_TEXTS = {
        "title": "üéâ <b>–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è:</b>\n\n",
        "step_1": "1Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—ã—à–µ üëÜ",
        "step_2": "2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        "step_3": "3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ ‚ûï –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É",
        "step_4": "4Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞",
        "step_5": "5Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è¬ª",
        "reminder_on": "üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ:</b> <u>–≤–∫–ª—é—á–µ–Ω–æ</u> ‚úÖ",
        "reminder_off": "üîï <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ:</b> <u>–≤—ã–∫–ª—é—á–µ–Ω–æ</u> ‚ùå",
        "support": "üí¨ –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
    }
    INSTR_TEMPLATE = (
        "{title}"
        "{step_1}\n"
        "{step_2}\n"
        "{step_3}\n"
        "{step_4}\n"
        "{step_5}\n\n"
        "{reminder_status}\n\n"
        "{support}"
    )
    reminder_status = INSTR_TEXTS["reminder_on"] if enabled else INSTR_TEXTS["reminder_off"]
    return INSTR_TEMPLATE.format(
        title=INSTR_TEXTS["title"],
        step_1=INSTR_TEXTS["step_1"],
        step_2=INSTR_TEXTS["step_2"],
        step_3=INSTR_TEXTS["step_3"],
        step_4=INSTR_TEXTS["step_4"],
        step_5=INSTR_TEXTS["step_5"],
        reminder_status=reminder_status,
        support=INSTR_TEXTS["support"],
    )

async def send_or_edit(chat_id: int, bot):
    setting = await reminders.get_setting(chat_id)
    enabled = bool(setting and setting.enabled)
    text = build_instruction(enabled)
    kb = user_keyboard()

    if setting and setting.last_msg_id:
        try:
            await safe_send(
                bot.edit_message_text,
                text,
                chat_id=chat_id,
                message_id=setting.last_msg_id,
                reply_markup=kb,
                parse_mode="HTML"
            )
            return
        except TelegramBadRequest:
            pass  # —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–∏–ª–∏ ‚Üí –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–æ–≤–æ–µ

    sent = await safe_send(bot.send_message, chat_id,
        text, parse_mode="HTML", reply_markup=kb
    )
    await reminders.save_last_msg_id(chat_id, sent.message_id) 