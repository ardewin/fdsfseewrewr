from apscheduler.schedulers.asyncio import AsyncIOScheduler
from services import reminders
from aiogram import Bot
from config import app_settings
from loguru import logger
from services.telegram_utils import safe_send
from aiogram.utils.chat_action import ChatActionSender
import asyncio

scheduler = AsyncIOScheduler(timezone="Europe/Amsterdam")

def start_scheduler(bot: Bot):
    async def _job():
        chat_ids = await reminders.list_enabled_chat_ids()
        async def send_reminder(cid):
            try:
                async with ChatActionSender.typing(bot, cid):
                    await safe_send(bot.send_message, cid,
                        "üîî –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–µ—Ä, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–æ–¥–æ–ª–∂–∞–ª —Å—Ç–∞–±–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å. –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤–∞—à—É –ø–æ–º–æ—â—å! üôè"
                    )
            except Exception as e:
                logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ {}: {}", cid, e)
        await asyncio.gather(*(send_reminder(cid) for cid in chat_ids))

    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    # –∫–∞–∂–¥–æ–µ 10-–µ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞ –≤ 17:00 –ø–æ Moscow time,
    # –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –¥–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
    scheduler.add_job(_job, "cron", day=10, hour=17, minute=0, id="support_monthly", max_instances=1)
    #scheduler.add_job(_job, "interval", minutes=1, id="support_test_minutely", max_instances=1)
    scheduler.start() 